filetype off
let g:mapleader = ","

nmap <Leader>ds  <Plug>DumpDebugStringVar
nmap <Leader>dS  <Plug>DumpDebugStringExpr

set runtimepath+=.
set runtimepath+=vader.vim
set runtimepath+=vim-repeat
set runtimepath+=after

filetype plugin indent on
syntax enable
set nomore
set noswapfile
set viminfo=


fun! GetFileForLang(lang_name,line)
  let l:path = fnamemodify(resolve(expand('%:p')), ':h')
  let l:filename = l:path . '/test/ft/' . 'a.' . a:lang_name
  return readfile(l:filename,'',a:line)[a:line-1]
endfun

""
" Format the given str based on the expected line and the expected given
" counter. Function searches for the $N$ identifiers in the string and replaces
" them with the line and counter respectively.
"
" Returns the modified string.
"
fun! FormatStrForExpectedLine(str, line, cnt)
  let l:strTmp = substitute(a:str, '\$1\$', a:line, "")
  let l:res = substitute(l:strTmp, '\$2\$', a:cnt, "")
  return l:res
endfun
